// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: test_users.sql

package database

import (
	"context"
	"time"
)

const createUser = `-- name: CreateUser :one
INSERT INTO test_user (id, created_at, updated_at, name)
VALUES (?, ?, ?, ?)
RETURNING id, created_at, updated_at, name
`

type CreateUserParams struct {
	ID        interface{}
	CreatedAt time.Time
	UpdatedAt time.Time
	Name      string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (TestUser, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.Name,
	)
	var i TestUser
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
	)
	return i, err
}
